{"ast":null,"code":"var _jsxFileName = \"/Users/tuomasnummela/Desktop/bookworm/src/components/ReadingGoal.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadingGoal = props => {\n  //Function to set a new readingGoal\n  const setReadingGoalTry = () => {\n    if (isNaN(props.readingGoal) || props.readingGoal <= 0) {\n      //Invalid reading goal page count: ERROR\n      window.alert('Invalid goal page count!');\n      return;\n    } //SUCCESS, readingGoal and state of app updated\n\n\n    props.setReadingGoal(Number(props.readingGoal));\n    props.setAppState('start');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Input your reading goal as a number of pages/day read to maintain your reading streak:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"pages/day...\",\n        onChange: event => props.setReadingGoal(Number(event.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 93\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setReadingGoalTry,\n      children: \"Confirm new reading goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }, this);\n};\n\n_c = ReadingGoal;\nexport default ReadingGoal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadingGoal\");","map":{"version":3,"sources":["/Users/tuomasnummela/Desktop/bookworm/src/components/ReadingGoal.js"],"names":["React","ReadingGoal","props","setReadingGoalTry","isNaN","readingGoal","window","alert","setReadingGoal","Number","setAppState","event","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAE9B;AACA,QAAMC,iBAAiB,GAAG,MAAM;AAE/B,QAAGC,KAAK,CAACF,KAAK,CAACG,WAAP,CAAL,IAA4BH,KAAK,CAACG,WAAN,IAAqB,CAApD,EAAsD;AACrD;AACAC,MAAAA,MAAM,CAACC,KAAP,CAAa,0BAAb;AACA;AACA,KAN8B,CAQ/B;;;AACAL,IAAAA,KAAK,CAACM,cAAN,CAAqBC,MAAM,CAACP,KAAK,CAACG,WAAP,CAA3B;AACAH,IAAAA,KAAK,CAACQ,WAAN,CAAkB,OAAlB;AACA,GAXD;;AAaA,sBACC;AAAA,4BACC;AAAA,wHAAyF;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,cAA/B;AACzF,QAAA,QAAQ,EAAEC,KAAK,IAAIT,KAAK,CAACM,cAAN,CAAqBC,MAAM,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAA3B;AADsE;AAAA;AAAA;AAAA;AAAA,cAAzF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAGC;AAAQ,MAAA,OAAO,EAAEV,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAOA,CAvBD;;KAAMF,W;AAyBN,eAAeA,WAAf","sourcesContent":["import React from 'react';\n\nconst ReadingGoal = (props) => {\n\n\t//Function to set a new readingGoal\n\tconst setReadingGoalTry = () => {\n\n\t\tif(isNaN(props.readingGoal) || props.readingGoal <= 0){\n\t\t\t//Invalid reading goal page count: ERROR\n\t\t\twindow.alert('Invalid goal page count!')\n\t\t\treturn;\n\t\t}\n\n\t\t//SUCCESS, readingGoal and state of app updated\n\t\tprops.setReadingGoal(Number(props.readingGoal));\n\t\tprops.setAppState('start');\n\t}\n\n\treturn(\n\t\t<div>\n\t\t\t<p>Input your reading goal as a number of pages/day read to maintain your reading streak:<input type='text' placeholder='pages/day...' \n\t\t\tonChange={event => props.setReadingGoal(Number(event.target.value))} /></p>\n\t\t\t<button onClick={setReadingGoalTry}>Confirm new reading goal</button>\n\t\t</div>\n\t)\n}\n\nexport default ReadingGoal;"]},"metadata":{},"sourceType":"module"}