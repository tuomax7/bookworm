{"ast":null,"code":"var _jsxFileName = \"/Users/tuomasnummela/Desktop/bookworm/src/components/ReadingUpdater.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadingUpdater = props => {\n  _s();\n\n  //Variable declarations\n  //State declarations\n  const [pagesRead, setPagesRead] = useState(0);\n  const [bookName, setBookName] = useState(''); //Function declarations\n\n  const submitReading = () => {\n    const bookSelector = document.getElementById('bookSelector'); //ACCOUNT FOR NEGATIVE PAGE COUNT!\n\n    if (props.books.find(book => book.name === bookName)) {\n      //'New' bookName is actually the name of a book previously added\n      window.alert('Book has already been added!');\n    } else if (bookName === '') {\n      //New bookname is empty\n      window.alert('Book name empty!');\n    } else {\n      if (bookSelector.value !== 'default') {\n        //Book selected from known ones\n        const selectedBookName = bookSelector.options[bookSelector.selectedIndex].text;\n        setBookName(selectedBookName);\n      }\n\n      const knownBook = props.books.find(book => book.name === bookName);\n    }\n    /*\n    \n    \t\tif (knownBook.pagesRead+pagesRead <= knownBook.pages){\n    \t\t\t//Book found and pages read does not exceed total page count of book\n    \t\t\tknownBook.pagesRead += pagesRead;\n    \n    \t\t\tprops.setStreak(props.streak+1);\n    \t\t\tprops.setTotalPages(props.totalPages+pagesRead);\n    \n    \t\t}else{\n    \t\t\t//Book found but pages read exceeds total page count of book\n    \t\t\twindow.alert('Pages read so far is greater than the total page count of book!')\n    \t\t}\n    \n    \t\tprops.setAppState('start');*/\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Update read pages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Select book:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"bookSelector\",\n        defaultValue: \"default\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"default\",\n          disabled: true,\n          hidden: true,\n          children: \"Choose here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 5\n        }, this), props.books.map(book => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: book.name\n        }, book.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 32\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"... or add a new one: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"book name here...\",\n        onChange: event => setBookName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Pages read: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"read pages here...\",\n        onChange: event => setPagesRead(Number(event.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitReading,\n      children: \"Submit pages read!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ReadingUpdater, \"Mxs5EM+5H9hESIDn+jPic3U6/nU=\");\n\n_c = ReadingUpdater;\nexport default ReadingUpdater;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadingUpdater\");","map":{"version":3,"sources":["/Users/tuomasnummela/Desktop/bookworm/src/components/ReadingUpdater.js"],"names":["React","useState","ReadingUpdater","props","pagesRead","setPagesRead","bookName","setBookName","submitReading","bookSelector","document","getElementById","books","find","book","name","window","alert","value","selectedBookName","options","selectedIndex","text","knownBook","map","event","target","Number"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAGjC;AAGA;AACA,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8BJ,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAAEK,QAAF,EAAYC,WAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C,CARiC,CAUjC;;AACA,QAAMO,aAAa,GAAG,MAAM;AAI3B,UAAMC,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAArB,CAJ2B,CAO3B;;AAEA,QAAGR,KAAK,CAACS,KAAN,CAAYC,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,IAAL,KAAcT,QAAzC,CAAH,EAAsD;AACrD;AACAU,MAAAA,MAAM,CAACC,KAAP,CAAa,8BAAb;AAEA,KAJD,MAIM,IAAGX,QAAQ,KAAK,EAAhB,EAAmB;AACxB;AACAU,MAAAA,MAAM,CAACC,KAAP,CAAa,kBAAb;AAEA,KAJK,MAID;AACJ,UAAGR,YAAY,CAACS,KAAb,KAAuB,SAA1B,EAAoC;AACnC;AAEA,cAAMC,gBAAgB,GAAGV,YAAY,CAACW,OAAb,CAAqBX,YAAY,CAACY,aAAlC,EAAiDC,IAA1E;AACAf,QAAAA,WAAW,CAACY,gBAAD,CAAX;AAEA;;AAED,YAAMI,SAAS,GAAGpB,KAAK,CAACS,KAAN,CAAYC,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAcT,QAAvC,CAAlB;AAKA;AAIH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,GAnDD;;AAqDA,sBACC;AAAA,4BAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAIC;AAAA,8CACA;AAAQ,QAAA,EAAE,EAAC,cAAX;AAA0B,QAAA,YAAY,EAAC,SAAvC;AAAA,gCACC;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,QAAQ,MAAhC;AAAiC,UAAA,MAAM,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,EAGEH,KAAK,CAACS,KAAN,CAAYY,GAAZ,CAAiBV,IAAD,iBAAU;AAAA,oBAAyBA,IAAI,CAACC;AAA9B,WAAaD,IAAI,CAACC,IAAlB;AAAA;AAAA;AAAA;AAAA,gBAA1B,CAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD,eAaC;AAAA,wDAAyB;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,mBAA/B;AACzB,QAAA,QAAQ,EAAEU,KAAK,IAAIlB,WAAW,CAACkB,KAAK,CAACC,MAAN,CAAaR,KAAd;AADL;AAAA;AAAA;AAAA;AAAA,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YAbD,eAgBC;AAAA,8CAAe;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,oBAA/B;AACf,QAAA,QAAQ,EAAEO,KAAK,IAAIpB,YAAY,CAACsB,MAAM,CAACF,KAAK,CAACC,MAAN,CAAaR,KAAd,CAAP;AADhB;AAAA;AAAA;AAAA;AAAA,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBD,eAmBC;AAAQ,MAAA,OAAO,EAAEV,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAuBA,CAvFD;;GAAMN,c;;KAAAA,c;AA0FN,eAAeA,cAAf","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n\nconst ReadingUpdater = (props) => {\n\n\n\t//Variable declarations\n\n\n\t//State declarations\n\tconst [ pagesRead, setPagesRead ] = useState(0);\n\tconst [ bookName, setBookName ] = useState('');\n\n\t//Function declarations\n\tconst submitReading = () => {\n\n\n\n\t\tconst bookSelector = document.getElementById('bookSelector');\n\n\n\t\t//ACCOUNT FOR NEGATIVE PAGE COUNT!\n\n\t\tif(props.books.find((book) => book.name === bookName)){\n\t\t\t//'New' bookName is actually the name of a book previously added\n\t\t\twindow.alert('Book has already been added!')\n\n\t\t}else if(bookName === ''){\n\t\t\t//New bookname is empty\n\t\t\twindow.alert('Book name empty!')\n\n\t\t}else{\n\t\t\tif(bookSelector.value !== 'default'){\n\t\t\t\t//Book selected from known ones\n\n\t\t\t\tconst selectedBookName = bookSelector.options[bookSelector.selectedIndex].text;\n\t\t\t\tsetBookName(selectedBookName);\n\n\t\t\t}\n\n\t\t\tconst knownBook = props.books.find(book => book.name === bookName);\n\n\n\n\n\t\t}\n\n\n\n/*\n\n\t\tif (knownBook.pagesRead+pagesRead <= knownBook.pages){\n\t\t\t//Book found and pages read does not exceed total page count of book\n\t\t\tknownBook.pagesRead += pagesRead;\n\n\t\t\tprops.setStreak(props.streak+1);\n\t\t\tprops.setTotalPages(props.totalPages+pagesRead);\n\n\t\t}else{\n\t\t\t//Book found but pages read exceeds total page count of book\n\t\t\twindow.alert('Pages read so far is greater than the total page count of book!')\n\t\t}\n\n\t\tprops.setAppState('start');*/\n\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{/*Later change book selection to dropdown-menu*/}\n\t\t\t<h3>Update read pages</h3>\n\n\t\t\t<p>Select book:\n\t\t\t<select id='bookSelector' defaultValue='default'>\n\t\t\t\t<option value='default' disabled hidden>Choose here</option>\n\n\t\t\t\t{props.books.map((book) => <option key={book.name}>{book.name}</option>)}\n\n\t\t\t</select>\n\t\t\t</p>\n\n\t\t\t<p>... or add a new one: <input type='text' placeholder='book name here...' \n\t\t\tonChange={event => setBookName(event.target.value)}/></p>\n\n\t\t\t<p>Pages read: <input type='text' placeholder='read pages here...' \n\t\t\tonChange={event => setPagesRead(Number(event.target.value))} /></p>\n\n\t\t\t<button onClick={submitReading}>Submit pages read!</button>\n\t\t</div>\n\t);\n}\n\n\nexport default ReadingUpdater"]},"metadata":{},"sourceType":"module"}