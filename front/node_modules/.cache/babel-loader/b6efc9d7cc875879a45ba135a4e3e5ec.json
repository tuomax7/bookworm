{"ast":null,"code":"var _jsxFileName = \"/Users/tuomasnummela/Desktop/bookworm/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport './App.css'; //Components\n\nimport Booklist from './components/Booklist.js';\nimport StreakView from './components/StreakView.js';\nimport ReadingUpdater from './components/ReadingUpdater.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  //Variable declarations\n  const books = [{\n    'name': 'Bookname 1',\n    'pages': 100,\n    'pagesRead': 50\n  }, {\n    'name': 'Bookname 2',\n    'pages': 200,\n    'pagesRead': 200\n  }];\n  const streak = 0;\n  const totalPages = 0; //State declarations\n\n  const [appState, setAppState] = useState('start'); //Function declarations\n\n  const onReadingUpdateClick = () => {\n    //Make this render ReadingUpdater\n    setState('updatingReading');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bookworm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(StreakView, {\n      streak: streak,\n      totalPages: totalPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), state === 'start' && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onReadingUpdateClick,\n      children: \"Update read pages!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 28\n    }, this), state === 'updatingReading' && /*#__PURE__*/_jsxDEV(ReadingUpdater, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(Booklist, {\n      books: books\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"vnnXI2S2JLUDnpBEhs2UQwjo9Ts=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tuomasnummela/Desktop/bookworm/src/App.js"],"names":["React","useState","Booklist","StreakView","ReadingUpdater","App","books","streak","totalPages","appState","setAppState","onReadingUpdateClick","setState","state"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAO,WAAP,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACjB;AACA,QAAMC,KAAK,GAAG,CACb;AACC,YAAQ,YADT;AAEC,aAAS,GAFV;AAGC,iBAAa;AAHd,GADa,EAMb;AACC,YAAQ,YADT;AAEC,aAAS,GAFV;AAGC,iBAAa;AAHd,GANa,CAAd;AAaD,QAAMC,MAAM,GAAG,CAAf;AACA,QAAMC,UAAU,GAAG,CAAnB,CAhBkB,CAmBlB;;AACA,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BT,QAAQ,CAAC,OAAD,CAA1C,CApBkB,CAuBlB;;AAEA,QAAMU,oBAAoB,GAAG,MAAM;AAClC;AACAC,IAAAA,QAAQ,CAAC,iBAAD,CAAR;AACA,GAHD;;AAKE,sBACE;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAGA,QAAC,UAAD;AAAY,MAAA,MAAM,EAAEL,MAApB;AAA4B,MAAA,UAAU,EAAEC;AAAxC;AAAA;AAAA;AAAA;AAAA,YAHA,EAKCK,KAAK,KAAK,OAAV,iBAAsB;AAAQ,MAAA,OAAO,EAAEF,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALvB,EAOCE,KAAK,KAAK,iBAAV,iBAAgC,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAPjC,eASA,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEP;AAAjB;AAAA;AAAA;AAAA;AAAA,YATA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA5CD;;GAAMD,G;;KAAAA,G;AA8CN,eAAeA,GAAf","sourcesContent":["import React from 'react'\nimport { useState } from 'react';\n\nimport './App.css';\n\n//Components\nimport Booklist from './components/Booklist.js';\nimport StreakView from './components/StreakView.js';\nimport ReadingUpdater from './components/ReadingUpdater.js';\n\n\nconst App = () => {\n\t//Variable declarations\n\tconst books = [\n\t\t{\n\t\t\t'name': 'Bookname 1',\n\t\t\t'pages': 100,\n\t\t\t'pagesRead': 50\n\t\t},\n\t\t{\n\t\t\t'name': 'Bookname 2',\n\t\t\t'pages': 200,\n\t\t\t'pagesRead': 200\n\t\t}\n\t];\n\nconst streak = 0;\nconst totalPages = 0;\n\n\n//State declarations\nconst [ appState, setAppState ] = useState('start');\n\n\n//Function declarations\n\nconst onReadingUpdateClick = () => {\n\t//Make this render ReadingUpdater\n\tsetState('updatingReading')\n}\n\n  return (\n    <div>\n    \t<h1>Bookworm</h1>\n  \t\t\n  \t\t<StreakView streak={streak} totalPages={totalPages}/>\n\n  \t\t{state === 'start' && (<button onClick={onReadingUpdateClick}>Update read pages!</button>)}\n\n  \t\t{state === 'updatingReading' && (<ReadingUpdater />)}\n\n  \t\t<Booklist books={books}/>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}