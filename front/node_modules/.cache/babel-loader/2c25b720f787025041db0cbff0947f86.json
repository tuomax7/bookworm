{"ast":null,"code":"var _jsxFileName = \"/Users/tuomasnummela/Desktop/bookworm/src/components/ReadingUpdater.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadingUpdater = props => {\n  _s();\n\n  //Variable declarations\n  //State declarations\n  const [pagesRead, setPagesRead] = useState(0);\n  const [bookName, setBookName] = useState(''); //Function declarations\n\n  const submitReading = () => {\n    props.setStreak(props.streak + 1);\n    props.setTotalPages(props.totalPages + pagesRead);\n\n    if (props.books.find(book => book.name === bookName)) {\n      books.pagesRead += pagesRead;\n    }\n\n    props.setAppState('start');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Update read pages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Book: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"book name here...\",\n        onChange: event => setBookName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Pages read: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"read pages here...\",\n        onChange: event => setPagesRead(Number(event.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitReading,\n      children: \"Submit pages read!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ReadingUpdater, \"Mxs5EM+5H9hESIDn+jPic3U6/nU=\");\n\n_c = ReadingUpdater;\nexport default ReadingUpdater;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadingUpdater\");","map":{"version":3,"sources":["/Users/tuomasnummela/Desktop/bookworm/src/components/ReadingUpdater.js"],"names":["React","useState","ReadingUpdater","props","pagesRead","setPagesRead","bookName","setBookName","submitReading","setStreak","streak","setTotalPages","totalPages","books","find","book","name","setAppState","event","target","value","Number"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAGjC;AAGA;AACA,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8BJ,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAAEK,QAAF,EAAYC,WAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C,CARiC,CAUjC;;AACA,QAAMO,aAAa,GAAG,MAAM;AAC3BL,IAAAA,KAAK,CAACM,SAAN,CAAgBN,KAAK,CAACO,MAAN,GAAa,CAA7B;AACAP,IAAAA,KAAK,CAACQ,aAAN,CAAoBR,KAAK,CAACS,UAAN,GAAiBR,SAArC;;AAEA,QAAGD,KAAK,CAACU,KAAN,CAAYC,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAcV,QAAvC,CAAH,EAAoD;AACnDO,MAAAA,KAAK,CAACT,SAAN,IAAmBA,SAAnB;AACA;;AAIDD,IAAAA,KAAK,CAACc,WAAN,CAAkB,OAAlB;AACA,GAXD;;AAaA,sBACC;AAAA,4BAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAIC;AAAA,wCAAS;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,mBAA/B;AACT,QAAA,QAAQ,EAAEC,KAAK,IAAIX,WAAW,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd;AADrB;AAAA;AAAA;AAAA;AAAA,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD,eAOC;AAAA,8CAAe;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,oBAA/B;AACf,QAAA,QAAQ,EAAEF,KAAK,IAAIb,YAAY,CAACgB,MAAM,CAACH,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AADhB;AAAA;AAAA;AAAA;AAAA,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YAPD,eAUC;AAAQ,MAAA,OAAO,EAAEZ,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAcA,CAtCD;;GAAMN,c;;KAAAA,c;AAwCN,eAAeA,cAAf","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n\nconst ReadingUpdater = (props) => {\n\n\n\t//Variable declarations\n\n\n\t//State declarations\n\tconst [ pagesRead, setPagesRead ] = useState(0);\n\tconst [ bookName, setBookName ] = useState('');\n\n\t//Function declarations\n\tconst submitReading = () => {\n\t\tprops.setStreak(props.streak+1);\n\t\tprops.setTotalPages(props.totalPages+pagesRead);\n\n\t\tif(props.books.find(book => book.name === bookName)){\n\t\t\tbooks.pagesRead += pagesRead;\n\t\t}\n\n\n\n\t\tprops.setAppState('start');\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{/*Later change book selection to dropdown-menu*/}\n\t\t\t<h3>Update read pages</h3>\n\n\t\t\t<p>Book: <input type='text' placeholder='book name here...' \n\t\t\tonChange={event => setBookName(event.target.value)}/></p>\n\n\t\t\t<p>Pages read: <input type='text' placeholder='read pages here...' \n\t\t\tonChange={event => setPagesRead(Number(event.target.value))} /></p>\n\n\t\t\t<button onClick={submitReading}>Submit pages read!</button>\n\t\t</div>\n\t);\n}\n\nexport default ReadingUpdater"]},"metadata":{},"sourceType":"module"}