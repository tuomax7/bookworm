{"ast":null,"code":"var _jsxFileName = \"/Users/tuomasnummela/Desktop/bookworm/src/components/ReadingGoal.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadingGoal = props => {\n  const setReadingGoal = input => {\n    if (isNaN(input) || input <= 0) {\n      //Invalid book page count\n      window.alert('Invalid page count!');\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Input your reading goal as a number of pages/day read to maintain your reading streak:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"pages/day...\",\n        onChange: event => setReadingGoal(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 93\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => props.setAppState('start'),\n      children: [\"Confirm new reading goal of \", props.readingGoal, \" pages/day?\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }, this);\n};\n\n_c = ReadingGoal;\nexport default ReadingGoal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadingGoal\");","map":{"version":3,"sources":["/Users/tuomasnummela/Desktop/bookworm/src/components/ReadingGoal.js"],"names":["React","ReadingGoal","props","setReadingGoal","input","isNaN","window","alert","event","target","value","setAppState","readingGoal"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAE9B,QAAMC,cAAc,GAAIC,KAAD,IAAW;AAEjC,QAAGC,KAAK,CAACD,KAAD,CAAL,IAAgBA,KAAK,IAAI,CAA5B,EAA8B;AAC7B;AACAE,MAAAA,MAAM,CAACC,KAAP,CAAa,qBAAb;AACA;AACA;AACD,GAPD;;AASA,sBACC;AAAA,4BACC;AAAA,wHAAyF;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,cAA/B;AACzF,QAAA,QAAQ,EAAEC,KAAK,IAAIL,cAAc,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd;AADwD;AAAA;AAAA;AAAA;AAAA,cAAzF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAGC;AAAQ,MAAA,OAAO,EAAE,MAAMR,KAAK,CAACS,WAAN,CAAkB,OAAlB,CAAvB;AAAA,iDAAgFT,KAAK,CAACU,WAAtF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAOA,CAlBD;;KAAMX,W;AAoBN,eAAeA,WAAf","sourcesContent":["import React from 'react';\n\nconst ReadingGoal = (props) => {\n\n\tconst setReadingGoal = (input) => {\n\n\t\tif(isNaN(input) || input <= 0){\n\t\t\t//Invalid book page count\n\t\t\twindow.alert('Invalid page count!')\n\t\t\treturn;\n\t\t}\n\t}\n\n\treturn(\n\t\t<div>\n\t\t\t<p>Input your reading goal as a number of pages/day read to maintain your reading streak:<input type='text' placeholder='pages/day...' \n\t\t\tonChange={event => setReadingGoal(event.target.value)} /></p>\n\t\t\t<button onClick={() => props.setAppState('start')}>Confirm new reading goal of {props.readingGoal} pages/day?</button>\n\t\t</div>\n\t)\n}\n\nexport default ReadingGoal;"]},"metadata":{},"sourceType":"module"}