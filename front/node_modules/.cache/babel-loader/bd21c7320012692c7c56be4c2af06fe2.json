{"ast":null,"code":"var _jsxFileName = \"/Users/tuomasnummela/Desktop/bookworm/src/components/ReadingUpdater.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadingUpdater = props => {\n  _s();\n\n  //Variable declarations\n  //State declarations\n  const [pagesRead, setPagesRead] = useState(0);\n  const [bookName, setBookName] = useState(''); //Function declarations\n\n  const submitReading = () => {\n    let knownBook = props.books.find(book => book.name === bookName);\n    const bookSelector = document.getElementById('bookSelector'); //ACCOUNT FOR NEGATIVE PAGE COUNT!\n\n    if (bookSelector.value !== 'default') {\n      //Book selected from known ones\n      const selectedBookName = bookSelector.options[bookSelector.selectedIndex].text;\n      setBookName(selectedBookName);\n    } else if (props.books.find(book => book.name === bookName)) {\n      //'New' bookName is actually the name of a book previously added\n      window.alert('Book has already been added!');\n    } else if (knownBook.pagesRead + pagesRead <= knownBook.pages) {\n      //Book found and pages read does not exceed total page count of book\n      knownBook.pagesRead += pagesRead;\n      props.setStreak(props.streak + 1);\n      props.setTotalPages(props.totalPages + pagesRead);\n    } else {\n      //Book found but pages read exceeds total page count of book\n      window.alert('Pages read so far is greater than the total page count of book!');\n    }\n\n    props.setAppState('start');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Update read pages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Select book:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"bookSelector\",\n        defaultValue: \"default\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"default\",\n          disabled: true,\n          hidden: true,\n          children: \"Choose here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 5\n        }, this), props.books.map(book => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: book.name\n        }, book.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 32\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"... or add a new one: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"book name here...\",\n        onChange: event => setBookName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Pages read: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"read pages here...\",\n        onChange: event => setPagesRead(Number(event.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitReading,\n      children: \"Submit pages read!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ReadingUpdater, \"Mxs5EM+5H9hESIDn+jPic3U6/nU=\");\n\n_c = ReadingUpdater;\nexport default ReadingUpdater;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadingUpdater\");","map":{"version":3,"sources":["/Users/tuomasnummela/Desktop/bookworm/src/components/ReadingUpdater.js"],"names":["React","useState","ReadingUpdater","props","pagesRead","setPagesRead","bookName","setBookName","submitReading","knownBook","books","find","book","name","bookSelector","document","getElementById","value","selectedBookName","options","selectedIndex","text","window","alert","pages","setStreak","streak","setTotalPages","totalPages","setAppState","map","event","target","Number"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n\nconst ReadingUpdater = (props) => {\n\n\n\t//Variable declarations\n\n\n\t//State declarations\n\tconst [ pagesRead, setPagesRead ] = useState(0);\n\tconst [ bookName, setBookName ] = useState('');\n\n\t//Function declarations\n\tconst submitReading = () => {\n\n\t\tlet knownBook = props.books.find(book => book.name === bookName);\n\n\n\n\t\tconst bookSelector = document.getElementById('bookSelector');\n\n\n\t\t//ACCOUNT FOR NEGATIVE PAGE COUNT!\n\n\n\t\tif(bookSelector.value !== 'default'){\n\t\t\t//Book selected from known ones\n\n\t\t\tconst selectedBookName = bookSelector.options[bookSelector.selectedIndex].text;\n\t\t\tsetBookName(selectedBookName);\n\n\t\t}else if(props.books.find((book) => book.name === bookName)){\n\t\t\t//'New' bookName is actually the name of a book previously added\n\t\t\twindow.alert('Book has already been added!')\n\n\t\t}\n\n\t\t\n\n\n\t\telse if (knownBook.pagesRead+pagesRead <= knownBook.pages){\n\t\t\t//Book found and pages read does not exceed total page count of book\n\t\t\tknownBook.pagesRead += pagesRead;\n\n\t\t\tprops.setStreak(props.streak+1);\n\t\t\tprops.setTotalPages(props.totalPages+pagesRead);\n\n\t\t}else{\n\t\t\t//Book found but pages read exceeds total page count of book\n\t\t\twindow.alert('Pages read so far is greater than the total page count of book!')\n\t\t}\n\n\t\tprops.setAppState('start');\n\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{/*Later change book selection to dropdown-menu*/}\n\t\t\t<h3>Update read pages</h3>\n\n\t\t\t<p>Select book:\n\t\t\t<select id='bookSelector' defaultValue='default'>\n\t\t\t\t<option value='default' disabled hidden>Choose here</option>\n\n\t\t\t\t{props.books.map((book) => <option key={book.name}>{book.name}</option>)}\n\n\t\t\t</select>\n\t\t\t</p>\n\n\t\t\t<p>... or add a new one: <input type='text' placeholder='book name here...' \n\t\t\tonChange={event => setBookName(event.target.value)}/></p>\n\n\t\t\t<p>Pages read: <input type='text' placeholder='read pages here...' \n\t\t\tonChange={event => setPagesRead(Number(event.target.value))} /></p>\n\n\t\t\t<button onClick={submitReading}>Submit pages read!</button>\n\t\t</div>\n\t);\n}\n\n\nexport default ReadingUpdater"]},"metadata":{},"sourceType":"module"}