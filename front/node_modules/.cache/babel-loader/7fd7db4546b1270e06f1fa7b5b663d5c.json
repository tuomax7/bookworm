{"ast":null,"code":"var _jsxFileName = \"/Users/tuomasnummela/Desktop/bookworm/src/components/ReadingUpdater.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadingUpdater = props => {\n  _s();\n\n  //Variable declarations\n  //State declarations\n  const [pagesRead, setPagesRead] = useState(0);\n  const [bookName, setBookName] = useState(''); //Function declarations\n\n  const submitReading = () => {\n    const knownBook = props.books.find(book => book.name === bookName); //ACCOUNT FOR NEGATIVE PAGE COUNT!\n\n    if (bookName === '') {\n      //New book not introduced\n      const bookSelector = document.getElementById('bookSelector');\n      const selectedBookName = bookSelector.options[bookSelector.selectedIndex].text;\n    } else if (knownBook.pagesRead + pagesRead <= knownBook.pages) {\n      //Book found and pages read does not exceed total page count of book\n      knownBook.pagesRead += pagesRead;\n      props.setStreak(props.streak + 1);\n      props.setTotalPages(props.totalPages + pagesRead);\n    } else {\n      //Book found but pages read exceeds total page count of book\n      window.alert('Pages read so far is greater than the total page count of book!');\n    }\n\n    props.setAppState('start');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Update read pages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Select book:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"bookSelector\",\n        children: props.books.map(book => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: book.name\n        }, book.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 32\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"... or add a new one: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"book name here...\",\n        onChange: event => setBookName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Pages read: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"read pages here...\",\n        onChange: event => setPagesRead(Number(event.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitReading,\n      children: \"Submit pages read!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ReadingUpdater, \"Mxs5EM+5H9hESIDn+jPic3U6/nU=\");\n\n_c = ReadingUpdater;\nexport default ReadingUpdater;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadingUpdater\");","map":{"version":3,"sources":["/Users/tuomasnummela/Desktop/bookworm/src/components/ReadingUpdater.js"],"names":["React","useState","ReadingUpdater","props","pagesRead","setPagesRead","bookName","setBookName","submitReading","knownBook","books","find","book","name","bookSelector","document","getElementById","selectedBookName","options","selectedIndex","text","pages","setStreak","streak","setTotalPages","totalPages","window","alert","setAppState","map","event","target","value","Number"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAGjC;AAGA;AACA,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8BJ,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAAEK,QAAF,EAAYC,WAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C,CARiC,CAUjC;;AACA,QAAMO,aAAa,GAAG,MAAM;AAE3B,UAAMC,SAAS,GAAGN,KAAK,CAACO,KAAN,CAAYC,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAcP,QAAvC,CAAlB,CAF2B,CAK3B;;AAEA,QAAGA,QAAQ,KAAK,EAAhB,EAAmB;AAClB;AACA,YAAMQ,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAArB;AACA,YAAMC,gBAAgB,GAAGH,YAAY,CAACI,OAAb,CAAqBJ,YAAY,CAACK,aAAlC,EAAiDC,IAA1E;AAIA,KAPD,MAOM,IAAIX,SAAS,CAACL,SAAV,GAAoBA,SAApB,IAAiCK,SAAS,CAACY,KAA/C,EAAqD;AAC1D;AACAZ,MAAAA,SAAS,CAACL,SAAV,IAAuBA,SAAvB;AAEAD,MAAAA,KAAK,CAACmB,SAAN,CAAgBnB,KAAK,CAACoB,MAAN,GAAa,CAA7B;AACApB,MAAAA,KAAK,CAACqB,aAAN,CAAoBrB,KAAK,CAACsB,UAAN,GAAiBrB,SAArC;AAEA,KAPK,MAOD;AACJ;AACAsB,MAAAA,MAAM,CAACC,KAAP,CAAa,iEAAb;AACA;;AAEDxB,IAAAA,KAAK,CAACyB,WAAN,CAAkB,OAAlB;AAEA,GA5BD;;AA8BA,sBACC;AAAA,4BAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAIC;AAAA,8CACA;AAAQ,QAAA,EAAE,EAAC,cAAX;AAAA,kBAEEzB,KAAK,CAACO,KAAN,CAAYmB,GAAZ,CAAiBjB,IAAD,iBAAU;AAAA,oBAAyBA,IAAI,CAACC;AAA9B,WAAaD,IAAI,CAACC,IAAlB;AAAA;AAAA;AAAA;AAAA,gBAA1B;AAFF;AAAA;AAAA;AAAA;AAAA,cADA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD,eAYC;AAAA,wDAAyB;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,mBAA/B;AACzB,QAAA,QAAQ,EAAEiB,KAAK,IAAIvB,WAAW,CAACuB,KAAK,CAACC,MAAN,CAAaC,KAAd;AADL;AAAA;AAAA;AAAA;AAAA,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YAZD,eAeC;AAAA,8CAAe;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,oBAA/B;AACf,QAAA,QAAQ,EAAEF,KAAK,IAAIzB,YAAY,CAAC4B,MAAM,CAACH,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AADhB;AAAA;AAAA;AAAA;AAAA,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YAfD,eAkBC;AAAQ,MAAA,OAAO,EAAExB,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAsBA,CA/DD;;GAAMN,c;;KAAAA,c;AAkEN,eAAeA,cAAf","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n\nconst ReadingUpdater = (props) => {\n\n\n\t//Variable declarations\n\n\n\t//State declarations\n\tconst [ pagesRead, setPagesRead ] = useState(0);\n\tconst [ bookName, setBookName ] = useState('');\n\n\t//Function declarations\n\tconst submitReading = () => {\n\n\t\tconst knownBook = props.books.find(book => book.name === bookName);\n\n\n\t\t//ACCOUNT FOR NEGATIVE PAGE COUNT!\n\n\t\tif(bookName === ''){\n\t\t\t//New book not introduced\n\t\t\tconst bookSelector = document.getElementById('bookSelector');\n\t\t\tconst selectedBookName = bookSelector.options[bookSelector.selectedIndex].text;\n\n\t\t\t\n\n\t\t}else if (knownBook.pagesRead+pagesRead <= knownBook.pages){\n\t\t\t//Book found and pages read does not exceed total page count of book\n\t\t\tknownBook.pagesRead += pagesRead;\n\n\t\t\tprops.setStreak(props.streak+1);\n\t\t\tprops.setTotalPages(props.totalPages+pagesRead);\n\n\t\t}else{\n\t\t\t//Book found but pages read exceeds total page count of book\n\t\t\twindow.alert('Pages read so far is greater than the total page count of book!')\n\t\t}\n\n\t\tprops.setAppState('start');\n\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{/*Later change book selection to dropdown-menu*/}\n\t\t\t<h3>Update read pages</h3>\n\n\t\t\t<p>Select book:\n\t\t\t<select id='bookSelector'>\n\n\t\t\t\t{props.books.map((book) => <option key={book.name}>{book.name}</option>)}\n\n\t\t\t</select>\n\t\t\t</p>\n\n\t\t\t<p>... or add a new one: <input type='text' placeholder='book name here...' \n\t\t\tonChange={event => setBookName(event.target.value)}/></p>\n\n\t\t\t<p>Pages read: <input type='text' placeholder='read pages here...' \n\t\t\tonChange={event => setPagesRead(Number(event.target.value))} /></p>\n\n\t\t\t<button onClick={submitReading}>Submit pages read!</button>\n\t\t</div>\n\t);\n}\n\n\nexport default ReadingUpdater"]},"metadata":{},"sourceType":"module"}