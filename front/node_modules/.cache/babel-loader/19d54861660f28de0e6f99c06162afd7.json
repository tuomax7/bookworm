{"ast":null,"code":"var _jsxFileName = \"/Users/tuomasnummela/Desktop/bookworm/src/components/ReadingUpdater.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadingUpdater = props => {\n  _s();\n\n  //Variable declarations\n  //State declarations\n  const [pagesRead, setPagesRead] = useState(0);\n  const [bookName, setBookName] = useState(''); //Function declarations\n\n  const submitReading = () => {\n    const knownBook = props.books.find(book => book.name === bookName);\n\n    if (!knownBook) {\n      //Book not found\n      window.alert('Book not found!');\n      props.setAppState('start');\n      return;\n    } else if (knownBook.pagesRead + pagesRead <= bookName.pages) {\n      //Book found and pages read does not exceed total page count of book\n      knownBook.pagesRead += pagesRead;\n      props.setStreak(props.streak + 1);\n      props.setTotalPages(props.totalPages + pagesRead);\n      props.setAppState('start');\n    }\n\n    if (knownBook && knownBook.pagesRead + pagesRead <= bookName.pages) {\n      //Book found and pages read does not exceed total page count of book\n      knownBook.pagesRead += pagesRead;\n      props.setStreak(props.streak + 1);\n      props.setTotalPages(props.totalPages + pagesRead);\n      props.setAppState('start');\n    } else if (knownBook.pagesRead + pagesRead > bookName) {\n      //\n      window.alert();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Update read pages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Book: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"book name here...\",\n        onChange: event => setBookName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Pages read: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"read pages here...\",\n        onChange: event => setPagesRead(Number(event.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitReading,\n      children: \"Submit pages read!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ReadingUpdater, \"Mxs5EM+5H9hESIDn+jPic3U6/nU=\");\n\n_c = ReadingUpdater;\nexport default ReadingUpdater;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadingUpdater\");","map":{"version":3,"sources":["/Users/tuomasnummela/Desktop/bookworm/src/components/ReadingUpdater.js"],"names":["React","useState","ReadingUpdater","props","pagesRead","setPagesRead","bookName","setBookName","submitReading","knownBook","books","find","book","name","window","alert","setAppState","pages","setStreak","streak","setTotalPages","totalPages","event","target","value","Number"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAGjC;AAGA;AACA,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8BJ,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAAEK,QAAF,EAAYC,WAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C,CARiC,CAUjC;;AACA,QAAMO,aAAa,GAAG,MAAM;AAC3B,UAAMC,SAAS,GAAGN,KAAK,CAACO,KAAN,CAAYC,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAcP,QAAvC,CAAlB;;AAEA,QAAG,CAACG,SAAJ,EAAc;AACb;AACAK,MAAAA,MAAM,CAACC,KAAP,CAAa,iBAAb;AACAZ,MAAAA,KAAK,CAACa,WAAN,CAAkB,OAAlB;AACA;AACA,KALD,MAKM,IAAIP,SAAS,CAACL,SAAV,GAAoBA,SAApB,IAAiCE,QAAQ,CAACW,KAA9C,EAAoD;AACzD;AACAR,MAAAA,SAAS,CAACL,SAAV,IAAuBA,SAAvB;AAEAD,MAAAA,KAAK,CAACe,SAAN,CAAgBf,KAAK,CAACgB,MAAN,GAAa,CAA7B;AACAhB,MAAAA,KAAK,CAACiB,aAAN,CAAoBjB,KAAK,CAACkB,UAAN,GAAiBjB,SAArC;AAGAD,MAAAA,KAAK,CAACa,WAAN,CAAkB,OAAlB;AACA;;AAED,QAAGP,SAAS,IAAKA,SAAS,CAACL,SAAV,GAAoBA,SAApB,IAAiCE,QAAQ,CAACW,KAA3D,EAAkE;AACjE;AACAR,MAAAA,SAAS,CAACL,SAAV,IAAuBA,SAAvB;AAEAD,MAAAA,KAAK,CAACe,SAAN,CAAgBf,KAAK,CAACgB,MAAN,GAAa,CAA7B;AACAhB,MAAAA,KAAK,CAACiB,aAAN,CAAoBjB,KAAK,CAACkB,UAAN,GAAiBjB,SAArC;AAGAD,MAAAA,KAAK,CAACa,WAAN,CAAkB,OAAlB;AAEA,KAVD,MAUM,IAAGP,SAAS,CAACL,SAAV,GAAoBA,SAApB,GAAgCE,QAAnC,EAA4C;AACjD;AACAQ,MAAAA,MAAM,CAACC,KAAP;AACA;AAED,GAlCD;;AAoCA,sBACC;AAAA,4BAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAIC;AAAA,wCAAS;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,mBAA/B;AACT,QAAA,QAAQ,EAAEO,KAAK,IAAIf,WAAW,CAACe,KAAK,CAACC,MAAN,CAAaC,KAAd;AADrB;AAAA;AAAA;AAAA;AAAA,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD,eAOC;AAAA,8CAAe;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,oBAA/B;AACf,QAAA,QAAQ,EAAEF,KAAK,IAAIjB,YAAY,CAACoB,MAAM,CAACH,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AADhB;AAAA;AAAA;AAAA;AAAA,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YAPD,eAUC;AAAQ,MAAA,OAAO,EAAEhB,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAcA,CA7DD;;GAAMN,c;;KAAAA,c;AA+DN,eAAeA,cAAf","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n\nconst ReadingUpdater = (props) => {\n\n\n\t//Variable declarations\n\n\n\t//State declarations\n\tconst [ pagesRead, setPagesRead ] = useState(0);\n\tconst [ bookName, setBookName ] = useState('');\n\n\t//Function declarations\n\tconst submitReading = () => {\n\t\tconst knownBook = props.books.find(book => book.name === bookName);\n\n\t\tif(!knownBook){\n\t\t\t//Book not found\n\t\t\twindow.alert('Book not found!');\n\t\t\tprops.setAppState('start');\n\t\t\treturn;\n\t\t}else if (knownBook.pagesRead+pagesRead <= bookName.pages){\n\t\t\t//Book found and pages read does not exceed total page count of book\n\t\t\tknownBook.pagesRead += pagesRead;\n\n\t\t\tprops.setStreak(props.streak+1);\n\t\t\tprops.setTotalPages(props.totalPages+pagesRead);\n\n\n\t\t\tprops.setAppState('start');\n\t\t}\n\n\t\tif(knownBook && (knownBook.pagesRead+pagesRead <= bookName.pages)){\n\t\t\t//Book found and pages read does not exceed total page count of book\n\t\t\tknownBook.pagesRead += pagesRead;\n\n\t\t\tprops.setStreak(props.streak+1);\n\t\t\tprops.setTotalPages(props.totalPages+pagesRead);\n\n\n\t\t\tprops.setAppState('start');\n\n\t\t}else if(knownBook.pagesRead+pagesRead > bookName){\n\t\t\t//\n\t\t\twindow.alert()\n\t\t}\n\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{/*Later change book selection to dropdown-menu*/}\n\t\t\t<h3>Update read pages</h3>\n\n\t\t\t<p>Book: <input type='text' placeholder='book name here...' \n\t\t\tonChange={event => setBookName(event.target.value)}/></p>\n\n\t\t\t<p>Pages read: <input type='text' placeholder='read pages here...' \n\t\t\tonChange={event => setPagesRead(Number(event.target.value))} /></p>\n\n\t\t\t<button onClick={submitReading}>Submit pages read!</button>\n\t\t</div>\n\t);\n}\n\nexport default ReadingUpdater"]},"metadata":{},"sourceType":"module"}