{"ast":null,"code":"var _jsxFileName = \"/Users/tuomasnummela/Desktop/bookworm/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport './App.css'; //Components\n\nimport Booklist from './components/Booklist.js';\nimport StreakView from './components/StreakView.js';\nimport ReadingUpdater from './components/ReadingUpdater.js';\nimport ReadingGoal from './components/ReadingGoal.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  //State declarations\n  const [appState, setAppState] = useState('start');\n  const [streak, setStreak] = useState(0);\n  const [readingGoal, setReadingGoal] = useState(10);\n  const [pagesReadToday, setPagesReadToday] = useState(0);\n  const [totalPages, setTotalPages] = useState(0);\n  const [books, setBooks] = useState([{\n    'name': 'Bookname 1',\n    'pages': 100,\n    'pagesRead': 0\n  }, {\n    'name': 'Bookname 2',\n    'pages': 200,\n    'pagesRead': 0\n  }]); //Date declarations\n\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  const [todayDate] = useState(today); //Set as today for development purposes\n\n  const [readByDate, setReadByDate] = useState(new Date(todayDate.getFullYear(), todayDate.getMonth(), todayDate.getDate())); //Function declarations\n\n  const onReadingUpdateClick = () => {\n    //Renders ReadingUpdater\n    setAppState('updatingReading');\n  };\n\n  const onGoalUpdateClick = () => {\n    //Renders ReadingGoal\n    setAppState('updatingGoal');\n  }; //Handles streak resetting ONCE when app is first rendered\n\n\n  useEffect(() => {\n    if (todayDate > readByDate) {\n      window.alert('You missed a day of reading, so your streak resets!');\n      setStreak(0);\n    }\n  }, [todayDate, readByDate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bookworm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(StreakView, {\n      streak: streak,\n      totalPages: totalPages,\n      readingGoal: readingGoal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [appState === 'start' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onReadingUpdateClick,\n        children: \"Update read pages!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 32\n      }, this), appState === 'updatingReading' && /*#__PURE__*/_jsxDEV(ReadingUpdater, {\n        setAppState: setAppState,\n        setStreak: setStreak,\n        setTotalPages: setTotalPages,\n        streak: streak,\n        totalPages: totalPages,\n        books: books,\n        setBooks: setBooks,\n        todayDate: todayDate,\n        readByDate: readByDate,\n        setReadByDate: setReadByDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [appState === 'start' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onGoalUpdateClick,\n        children: \"Set reading goal!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 32\n      }, this), appState === 'updatingGoal' && /*#__PURE__*/_jsxDEV(ReadingGoal, {\n        readingGoal: readingGoal,\n        setReadingGoal: setReadingGoal,\n        setAppState: setAppState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Booklist, {\n      books: books\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"FVSxZmpMOuuPiS6jpWlfrYg17x8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tuomasnummela/Desktop/bookworm/src/App.js"],"names":["React","useState","useEffect","Booklist","StreakView","ReadingUpdater","ReadingGoal","App","appState","setAppState","streak","setStreak","readingGoal","setReadingGoal","pagesReadToday","setPagesReadToday","totalPages","setTotalPages","books","setBooks","today","Date","setHours","todayDate","readByDate","setReadByDate","getFullYear","getMonth","getDate","onReadingUpdateClick","onGoalUpdateClick","window","alert"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\n\nimport './App.css';\n\n//Components\nimport Booklist from './components/Booklist.js';\nimport StreakView from './components/StreakView.js';\nimport ReadingUpdater from './components/ReadingUpdater.js';\nimport ReadingGoal from './components/ReadingGoal.js';\n\n\nconst App = () => {\n\n//State declarations\n  const [ appState, setAppState ] = useState('start');\n  const [ streak, setStreak ] = useState(0);\n  const [ readingGoal, setReadingGoal ] = useState(10);\n  const [ pagesReadToday, setPagesReadToday ] = useState(0);\n  const [ totalPages, setTotalPages ] = useState(0);\n  const [ books, setBooks ] = useState([\n\t  {\n\t\t  'name': 'Bookname 1',\n\t\t  'pages': 100,\n\t\t  'pagesRead': 0\n\t  },\n\t  {\n\t\t  'name': 'Bookname 2',\n\t\t  'pages': 200,\n\t\t  'pagesRead': 0\n\t  }\n  ]);\n\n  //Date declarations\n\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  \n  const [ todayDate ] = useState(today);\n\n  //Set as today for development purposes\n  const [ readByDate, setReadByDate ] = useState(\n  \tnew Date(todayDate.getFullYear(), todayDate.getMonth(), todayDate.getDate()));\n\n\n  //Function declarations\n\n  const onReadingUpdateClick = () => {\n\t  //Renders ReadingUpdater\n\t  setAppState('updatingReading')\n  }\n\n  const onGoalUpdateClick = () => {\n  \t\t//Renders ReadingGoal\n  \t\tsetAppState('updatingGoal');\n  }\n\n  //Handles streak resetting ONCE when app is first rendered\n  useEffect(() => {\n  \tif(todayDate > readByDate){\n  \t\twindow.alert('You missed a day of reading, so your streak resets!');\n  \t\tsetStreak(0);\n  \t}\n  }, [todayDate, readByDate])\n\n\n  return (\n    <div>\n    \t<h1>Bookworm</h1>\n  \t\t\n  \t\t<StreakView streak={streak} totalPages={totalPages} readingGoal={readingGoal}/>\n\n  \t\t<div>\n  \t\t\t{appState === 'start' && (<button onClick={onReadingUpdateClick}>Update read pages!</button>)}\n\n  \t\t\t{appState === 'updatingReading' && (<ReadingUpdater setAppState={setAppState} setStreak={setStreak} setTotalPages={setTotalPages} streak={streak} totalPages={totalPages} \n  \t\t\tbooks={books} setBooks={setBooks} todayDate={todayDate} readByDate={readByDate} setReadByDate={setReadByDate}/>) }\n  \t\t</div>\n\n  \t\t<div>\n  \t\t\t{appState === 'start' && (<button onClick={onGoalUpdateClick}>Set reading goal!</button>)}\n\n  \t\t\t{appState === 'updatingGoal' && (<ReadingGoal readingGoal={readingGoal} setReadingGoal={setReadingGoal} setAppState={setAppState}/>)}\n  \t\t</div>\n\n\n  \t\t<Booklist books={books}/>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}